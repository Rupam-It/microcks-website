name: External Link Check

on:
  schedule:
    - cron: "42 0 * * 0"
  workflow_dispatch:

jobs:
  linkChecker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Ensure the report directory exists
      - name: Ensure Report Directory Exists
        run: mkdir -p link-checker

      # Run lychee and capture all errors
      - name: Link Checker
        id: lychee
        continue-on-error: true
        run: |
          lychee --verbose --no-progress './**/*.md' './**/*.html' --scheme https --scheme http --cache --max-cache-age 8h --exclude "https://facebook.com/sharer/sharer.php?u={{%20\$url%20}}" | tee link-checker/report.md
        env:
          GITHUB_TOKEN: ${{ secrets.CUSTOM_TOKEN }}

      # Capture lychee's error logs if it failed
      - name: Capture Lychee Errors
        if: failure()
        run: |
          echo "### Lychee encountered an error:" >> link-checker/report.md
          cat $GITHUB_WORKSPACE/_temp/* >> link-checker/report.md || echo "No extra logs found"

      # Debug: Check report contents
      - name: Debug Link Report
        run: cat ./link-checker/report.md || echo "No broken links found."

      # Determine if report contains errors
      - name: Check Lychee Report
        id: check_lychee_exit
        run: |
          if grep -q "Error:" ./link-checker/report.md; then
            echo "has_broken_links=true" >> $GITHUB_ENV
          else
            echo "has_broken_links=false" >> $GITHUB_ENV
          fi

      # Format the date for issue title
      - name: Format Date
        run: echo "DATE=$(date +'%A, %e. %b %Y')" >> $GITHUB_ENV

      # Create an issue if there are broken links or regex errors
      - name: Create Issue From File
        if: env.has_broken_links == 'true'
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: "External Link Check Report - ${{ env.DATE }}"
          content-filepath: ./link-checker/report.md
          labels: report, automated issue, help wanted
