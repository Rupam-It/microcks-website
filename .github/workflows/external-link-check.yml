name: External Link Check

on:
  schedule:
    - cron: "42 0 * * 0"
  # workflow_dispatch:

jobs:
  linkChecker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Ensure Report Directory Exists
        run: mkdir -p link-checker

      # Run lychee and capture errors
      - name: Link Checker
        id: lychee
        uses: lycheeverse/lychee-action@v1
        continue-on-error: true
        with:
          args: --verbose --no-progress './**/*.md' './**/*.html' --scheme https --scheme http
          format: markdown
          output: ./link-checker/report.md
          fail: false
        env:
          GITHUB_TOKEN: ${{ secrets.CUSTOM_TOKEN }}

      # Capture lychee output including regex errors
      - name: Capture Errors
        run: |
          echo "### Lychee Link Check Report" > ./link-checker/report.md
          echo "" >> ./link-checker/report.md
          { lychee --verbose --no-progress './**/*.md' './**/*.html' --scheme https --scheme http; } >> ./link-checker/report.md 2>&1 || true
          echo "" >> ./link-checker/report.md

      # Debug: Show report contents
      - name: Debug Report
        run: cat ./link-checker/report.md

      # Check if report contains regex errors or broken links
      - name: Check for Errors
        id: check_errors
        run: |
          if grep -q "Error:" ./link-checker/report.md || grep -q "âœ—" ./link-checker/report.md; then
            echo "has_errors=true" >> $GITHUB_ENV
          else
            echo "has_errors=false" >> $GITHUB_ENV
          fi

      - name: Format Date
        run: echo "DATE=$(date +'%A, %e. %b %Y')" >> $GITHUB_ENV

      - name: Create Issue From File
        if: env.has_errors == 'true'
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: "External Link Check Report - ${{ env.DATE }}"
          content-filepath: ./link-checker/report.md
          labels: report, automated issue, help wanted