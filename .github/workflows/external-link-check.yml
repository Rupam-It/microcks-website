name: External Link Check

on:
  schedule:
    - cron: "42 0 * * 0"
  workflow_dispatch:

jobs:
  linkChecker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Run lychee to check links
      - name: Link Checker
        id: lychee
        continue-on-error: true  # Prevents the workflow from stopping on errors
        run: |
          lychee --verbose --no-progress './**/*.md' './**/*.html' --scheme https --scheme http --cache --max-cache-age 8h --exclude "https://facebook.com/sharer/sharer.php?u={{%20\$url%20}}" | tee link-checker/report.md
          echo "LYCHEE_EXIT_CODE=$?" >> $GITHUB_ENV

      # Debug step to check if report.md contains correct output
      - name: Debug Link Report
        run: cat ./link-checker/report.md || echo "No broken links found."

      # Ensure the issue is only created when actual broken links are found
      - name: Check Lychee Exit Code
        id: check_lychee_exit
        run: |
          if [ "$LYCHEE_EXIT_CODE" -ne 0 ]; then
            echo "has_broken_links=true" >> $GITHUB_ENV
          else
            echo "has_broken_links=false" >> $GITHUB_ENV
          fi

      # Format the date for the issue title
      - name: Format Date
        id: format_date
        run: echo "DATE=$(date +'%A, %e. %b %Y')" >> $GITHUB_ENV

      # Create an issue if there are broken links
      - name: Create Issue From File
        if: env.has_broken_links == 'true'
        id: create_issue
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: "External Link Check Report - ${{ env.DATE }}"
          content-filepath: ./link-checker/report.md
          labels: report, automated issue, help wanted

      # Store the issue number in an environment variable
      - name: Store Issue Number
        if: steps.create_issue.outputs.issue-number
        run: echo "ISSUE_NUMBER=${{ steps.create_issue.outputs.issue-number }}" >> $GITHUB_ENV

      # Add the broken links report as a comment on the issue
      - name: Add broken links as a comment
        if: env.has_broken_links == 'true'
        run: gh issue comment "$ISSUE_NUMBER" --body "$(cat ./link-checker/report.md)"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
